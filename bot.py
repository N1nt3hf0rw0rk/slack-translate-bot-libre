import os
from slack_bolt import App
from slack_bolt.adapter.socket_mode import SocketModeHandler
import requests

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Slack App
app = App(token=os.environ["SLACK_BOT_TOKEN"])

# –ú–∞–ø–∞ –µ–º–æ–¥–∑—ñ –¥–æ –º–æ–≤ (Slack –ø–µ—Ä–µ–¥–∞—î –µ–º–æ–¥–∑—ñ —è–∫ 'flag-ua' —Ç–æ—â–æ)
LANGUAGE_EMOJIS = {
    "flag-gb": "en",
    "flag-ua": "uk",
    "flag-ru": "ru",
}

# –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–∫–ª–∞–¥—É —á–µ—Ä–µ–∑ LibreTranslate
def translate(text, target_lang):
    resp = requests.post("https://libretranslate.de/translate", data={
        "q": text,
        "source": "auto",
        "target": target_lang,
        "format": "text"
    })
    return resp.json().get("translatedText", "[Translation failed]")

# –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–æ–¥–∞–≤–∞–Ω–Ω—è –µ–º–æ–¥–∑—ñ
@app.event("reaction_added")
def handle_reaction_added(event, say, client, logger):
    emoji = event["reaction"]
    user_id = event["user"]
    channel = event["item"]["channel"]
    timestamp = event["item"]["ts"]

    logger.info(f"Reaction added: {emoji} by user {user_id} on message {timestamp}")

    if emoji not in LANGUAGE_EMOJIS:
        return

    try:
        # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        response = client.conversations_history(
            channel=channel,
            latest=timestamp,
            limit=1,
            inclusive=True
        )
        original_msg = response["messages"][0]["text"]

        target_lang = LANGUAGE_EMOJIS[emoji]
        translated = translate(original_msg, target_lang)

        # –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É —É DM –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        client.chat_postMessage(
            channel=user_id,
            text=f"üîÅ –ü–µ—Ä–µ–∫–ª–∞–¥ ({target_lang}):\n{translated}"
        )
    except Exception as e:
        logger.error(f"Error: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Socket Mode
if __name__ == "__main__":
    handler = SocketModeHandler(app, os.environ["SLACK_APP_TOKEN"])
    print("‚ö°Ô∏è Slack bot is running!")
    handler.start()
