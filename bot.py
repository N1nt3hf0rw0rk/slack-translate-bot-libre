import threading
import http.server
import socketserver

def run_fake_server():
    PORT = 8080
    Handler = http.server.SimpleHTTPRequestHandler
    with socketserver.TCPServer(("", PORT), Handler) as httpd:
        print(f"Serving fake HTTP server on port {PORT}")
        httpd.serve_forever()

threading.Thread(target=run_fake_server, daemon=True).start()

import os
import logging
from slack_bolt import App
from slack_bolt.adapter.socket_mode import SocketModeHandler
from slack_sdk.errors import SlackApiError
from deep_translator import GoogleTranslator

# –õ–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ–¥–∞—Ç–∫—É Slack
app = App(token=os.environ.get("SLACK_BOT_TOKEN"))

# –ú–∞–ø–∞ –µ–º–æ–¥–∑—ñ –¥–æ –º–æ–≤
EMOJI_TO_LANG = {
    "repeat": "uk",
    "gb": "en",
    "flag-gb": "en",
    "üá¨üáß": "en",
    "ru": "ru",
    "flag-ru": "ru",
    "üá∑üá∫": "ru",
}

@app.event("reaction_added")
def handle_reaction_added(event, say, client, logger):
    reaction = event["reaction"]
    logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ —Ä–µ–∞–∫—Ü—ñ—é: {reaction}")

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –µ–º–æ–¥–∑—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –º–æ–≤—ñ
    target_lang = EMOJI_TO_LANG.get(reaction)
    if not target_lang:
        logger.info(f"–ï–º–æ–¥–∑—ñ '{reaction}' –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è.")
        return

    channel = event["item"]["channel"]
    timestamp = event["item"]["ts"]

    try:
        # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –Ω–∞ —è–∫–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ —Ä–µ–∞–∫—Ü—ñ—é
        result = client.conversations_history(channel=channel, latest=timestamp, inclusive=True, limit=1)
        original_message = result["messages"][0].get("text")

        if not original_message:
            logger.info("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.")
            return

        # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –º–æ–≤–∏ –æ—Ä–∏–≥—ñ–Ω–∞–ª—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
        translated = GoogleTranslator(source="auto", target=target_lang).translate(original_message)

        # –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–µ—Ä–µ–∫–ª–∞–¥–µ–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        say(
            text=f":{reaction}: –ü–µ—Ä–µ–∫–ª–∞–¥ ({target_lang}):\n{translated}",
            thread_ts=timestamp,
            reply_broadcast=False,
        )

    except SlackApiError as e:
        logger.error(f"Slack API –ø–æ–º–∏–ª–∫–∞: {e.response['error']}")
    except Exception as e:
        logger.error(f"–Ü–Ω—à–∞ –ø–æ–º–∏–ª–∫–∞: {str(e)}")


if __name__ == "__main__":
    handler = SocketModeHandler(app, os.environ["SLACK_APP_TOKEN"])
    handler.start()
